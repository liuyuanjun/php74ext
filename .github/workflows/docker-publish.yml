name: 构建Docker镜像并推送

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    # 当前脚本是在容器中运行的，对应的镜像是ubuntu-latest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 源码
        uses: actions/checkout@v3

      
      - name: 打印 GitHub 上下文
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        # 将GTIHUB的信息都打印出来，后面的脚本可以使用这些信息，例如后面的镜像TAG用的就是这里面的commitid
        run: echo "Hello ${{ github.event.commits[0].id }}"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: 安装 cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      # 使用buildx来构建镜像，这个工具功能很丰富
      - name: 设置 Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest

      # 登录 Docker hub
      - name: 登录 docker hub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        # 指定login命令登录hub.docker.com，帐号和密码已经在GitHub网页中配置好了
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: 构建并推送 Docker image
        id: build-and-push
        run: ls -lah && fullCommit="${{ github.event.commits[0].id }}" && \
          docker buildx build \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag liuyuanjun/php74ext:"${fullCommit:0:7}"
