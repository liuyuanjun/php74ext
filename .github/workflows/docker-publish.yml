name: 构建Docker镜像并推送

on:
  schedule:
    - cron: '42 15 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    # 当前脚本是在容器中运行的，对应的镜像是ubuntu-latest
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout 源码
        uses: actions/checkout@v3

      
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        # 将GTIHUB的信息都打印出来，后面的脚本可以使用这些信息，例如后面的镜像TAG用的就是这里面的commitid
        run: echo "Hello ${{ github.event.commits[0].id }}"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: 安装 cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      # 使用buildx来构建镜像，这个工具功能很丰富
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # 登录 Docker hub
      - name: 登录 docker hub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        # 指定login命令登录hub.docker.com，帐号和密码已经在GitHub网页中配置好了
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: 构建并推送 Docker image
        id: build-and-push
        run: fullCommit="${{ github.event.commits[0].id }}" && \
          docker buildx build \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag liuyuanjun/php74ext:"${fullCommit:0:7}"
